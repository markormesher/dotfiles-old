#!/usr/bin/env bash
set -euo pipefail

# sanity-check: is dotfiles in the right place?
if [ ! -d "${HOME}/dotfiles" ]; then
  echo "ERROR: ${HOME}/dotfiles does not exist"
  exit 1
fi

cd "${HOME}/dotfiles"
source "bin/common-functions.sh"

# temp for old functionality
if host_has_tag "flavour=work"; then
  filterfiles='grep -v .personal'
fi
if host_has_tag "flavour=personal"; then
  filterfiles='grep -v .work'
fi
# end temp for old functionality

print_info "Setting up symlinks"
find "${HOME}/dotfiles" -iname "*.newsymlink" | while read file; do
  if ! file_matches_host_tags "${file}"; then
    continue
  fi

  link=$(cat "${file}" | (grep "# dot-link-to" || :) | cut -d ' ' -f 3 | sed "s#{HOME}#${HOME}#g")
  if [ -z "${link}" ]; then
    print_error "No 'dot-link-to' found for ${file}"
    exit 1
  fi

  rm "${link}" 2> /dev/null || :
  mkdir -p "$(dirname "${link}")"
  ln -s "${file}" "${link}"
  print_info "${link} -> ${file}"
done

print_info "Adding source scripts to bootstrapper"
echo "" > "bootstrap"
find "${HOME}/dotfiles" -iname "*.newsource" | while read file; do
  if ! file_matches_host_tags "${file}"; then
    continue
  fi

  echo "source \"${file}\"" >> "bootstrap"
  print_info "${file}"
done

echo "[OLD] Setting up symlinks"
find $(pwd) -iname "*.symlink*" | $filterfiles | while read file; do
  link="$HOME/"$(echo "$file" | sed "s|^$(pwd)||" | cut -d '/' -f 3- | sed -E 's/\.symlink.*//')
  real="$file"
  rm "$link" 2> /dev/null
  mkdir -p "$(dirname $link)"
  ln -s "$real" "$link"
  echo "  $link -> $real"
done

print_info "Setting up \$PATH"
newpath="/bin:/usr/local/bin:/usr/local/sbin:$HOME/dotfiles/bin:$PATH"
newpath="$(perl -ne 'print join(":", grep { !$seen{$_}++ } split(/:/))' <<<"$newpath")"
echo "export PATH=${newpath}" >> "bootstrap"

print_info "[OLD] Adding source scripts to bootstrapper"
find $(pwd) -iname "*.source*" | sort | $filterfiles | while read file; do
  echo "source \"$file\"" >> "bootstrap"
  echo "  $file"
done
